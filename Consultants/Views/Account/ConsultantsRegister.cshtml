@model Consultants.Models.ConsultantsAccount

@{
    ViewBag.Title = "רישום למאגר כיועץ";
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap-responsive.css" />
    <!-- Ignite UI Required Combined CSS Files -->
    <link href="http://cdn-na.infragistics.com/igniteui/2017.1/latest/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" />
    <link href="http://cdn-na.infragistics.com/igniteui/2017.1/latest/css/structure/infragistics.css" rel="stylesheet" />

    <script src="http://ajax.aspnetcdn.com/ajax/modernizr/modernizr-2.8.3.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

    <!-- Ignite UI Required Combined JavaScript Files -->
    <script src="http://cdn-na.infragistics.com/igniteui/2017.1/latest/js/infragistics.core.js"></script>
    <script src="http://cdn-na.infragistics.com/igniteui/2017.1/latest/js/infragistics.lob.js"></script>
    <title>הרשמה כיועץ</title>

    <script>

        $(function () {
            $("#checkboxSelectCombo").igCombo({
                width: 300,
                dataSource:@Html.Raw(Json.Encode(ViewBag.SubjectList)),

                textKey: "Name",
                valueKey: "ID",
                multiSelection: {
                    enabled: true,
                    showCheckboxes: true
                },
                dropDownOrientation: "bottom"
            });
            $(function () {



                $('#password').on('input', function (e)
                {
                    var regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@@$!%*?&])[A-Za-z\d$@@$!%*?&]{8,10}/;
                    var value = $(this).val();
                    if (value.length === 0) {
                        $('#passwordError').replaceWith("<p id=passwordError class=msgError>Error:Field is required. </p>");
                    }

                    else if (!regexPass.test(value)) {

                        $('#passwordError').replaceWith("<p id=passwordError class=msgError>Error:Minimum eight and maximum 10 characters, at least one uppercase letter, one lowercase letter, one number and one special character:</p>");
                    }
                    else {
                        $('#passwordError').replaceWith("<p id=passwordError hidden></p>");
                    }
                });
                $('#username').on('input', function (e)
                {
                    var value = $(this).val();
                    if (value.length === 0) {

                        $('#userNameerror').replaceWith("<p id=userNameerror class=msgError>Error:Field is required. </p>");
                    }
                    else {
                        $('#userNameerror').replaceWith("<p id=userNameerror hidden></p>");
                    }
                });
                $('#ConfirmPassword').on('input', function (e) {
                    var value = $(this).val();
                    ConfirmPassword = document.getElementById("password").value;
                    if (value.length === 0 ) {

                        $('#confirmPasswordError').replaceWith("<p id=confirmPasswordError class=msgError>Error:Field is required. </p>");
                    }
                    else if (value != ConfirmPassword) {

                        $('#confirmPasswordError').replaceWith("<p id=confirmPasswordError class=msgError>Passwords are not match </p>");
                    }

                    else {
                        $('#confirmPasswordError').replaceWith("<p id=confirmPasswordError hidden></p>");
                    }
                });
                $('#Email').on('input', function (e) {
                    var value = $(this).val();
                    var regexMail = /^([\w\.\-]+)@@([\w\-]+)((\.(\w){2,3})+)$/;

                    if (value.length === 0) {

                        $('#emailError').replaceWith("<p id=emailError class=msgError>Error:Field is required. </p>");
                    }
                    else  if (!regexMail.test(value)) {
                        $('#emailError').replaceWith("<p id=emailError class=msgError>Error:Email is incorrect. </p>");

                    }
                    else {
                        $('#emailError').replaceWith("<p id=emailError hidden></p>");
                    }
                });
                $('#FirstName').on('input', function (e) {
                    var value = $(this).val();
                    if (value.length === 0) {

                        $('#firstnameError').replaceWith("<p id=firstnameError class=msgError>Error:Field is required. </p>");
                    }

                    else if (!(value.match(/^[a-zA-Z()]*$/))) {
                        $('#firstnameError').replaceWith("<p id=firstnameError class=msgError>Error:Only Charcters are accepted. </p>");

                    }
                    else {
                        $('#firstnameError').replaceWith("<p id=firstnameError hidden></p>");
                    }
                });
                $('#LastName').on('input', function (e) {
                    var value = $(this).val();
                    if (value.length === 0) {

                        $('#lastnameError').replaceWith("<p id=lastnameError class=msgError>Error:Field is required. </p>");
                    }

                    else if (!(value.match(/^[a-zA-Z()]*$/))) {
                        $('#lastnameError').replaceWith("<p id=lastnameError class=msgError>Error:Only Charcters are accepted. </p>");

                    }
                    else {
                        $('#lastnameError').replaceWith("<p id=lastnameError hidden></p>");
                    }
                });


            });
        });
    </script>
    <script>
        function registerFormValidate() {

            var userName = document.getElementById("username").value;
            var password = document.getElementById("password").value;
            var ConfirmPassword = document.getElementById("ConfirmPassword").value;
            var Email = document.getElementById("Email").value;
            var firstname = document.getElementById("FirstName").value;
            var lastname = document.getElementById("LastName").value;


            if (userName == "" || password == "" || ConfirmPassword == "" || Email == "" || firstname == "" || lastname == "") {
                alert("Please check the Errors");
                return false;
            }
            if (password != ConfirmPassword) {
                alert("Please check the Errors");
                return false;
            }
            var regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@@$!%*?&])[A-Za-z\d$@@$!%*?&]{8,10}/;
            if (!regexPass.test(password)) {
                alert("Please check the Errors");
                return false;
            }
            var regexMail = /^([\w\.\-]+)@@([\w\-]+)((\.(\w){2,3})+)$/;
            if (!regexMail.test(Email)) {
                alert("Please check the Errors");
                return false;
            }

            if (!(/^[a-zA-Z]+$/.test(firstname))) {
                alert("Please check the Errors");
                return false;
            }
            if (!(/^[a-zA-Z]+$/.test(lastname))) {
                alert("Please check the Errors");
                return false;
            }

            return true;
        }
    </script>
</head>



<body>

    <div id="content-reg" class="col-lg-offset-3">
        <h1>הרשמה כיועץ</h1>

        @using (Html.BeginForm("ConsultantsRegister", "account", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return registerFormValidate()" }))
        {


            <div class="row">
                <div class="col-lg-6">

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { type = "text", placeholder = "שם פרטי", id = "FirstName", required = "" } })
                    <p id="firstnameError" hidden></p>
                    <br />
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { type = "text", placeholder = "שם משפחה", id = "LastName", required = "" } })
                    <p id="lastnameError" hidden></p>
                    <br />
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { type = "text", placeholder = "אימייל", id = "Email" } })
                    <p id="emailError" hidden></p>
                    <br />
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { type = "text", placeholder = "מספר פלאפון", id = "phone", required = "" } })
                    <br />
                    @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { type = "text", placeholder = "מספר טלפון בבית", id = "HomePhone", required = "" } })
                    <br />
                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { type = "text", placeholder = "מספר פקס", id = "Fax", required = "" } })
                    <br />
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { type = "text", placeholder = "רחוב", id = "Street", required = "" } })
                    <br />
                </div>

                <div class="col-lg-6">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { type = "text", placeholder = "שם משתמש", id = "username", required = "" } })
                    <br />
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { type = "password", placeholder = "סיסמא", id = "password", required = "" } })
                    <p id="passwordError" hidden></p>
                    <br />
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { type = "password", placeholder = "אישור סיסמא", id = "ConfirmPassword", required = "" } })
                    <p id="confirmPasswordError" hidden></p>
                    <br />
                    @Html.EditorFor(model => model.CounsilSubject1, new { htmlAttributes = new { type = "text", placeholder = " תחום יעוץ 1", id = "username", required = "" } })
                    <br />
                    @Html.EditorFor(model => model.YearOfExprience1, new { htmlAttributes = new { type = "text", placeholder = " שנות נסיון 1", id = "username", required = "" } })
                    <br />
                    @Html.EditorFor(model => model.CounsilSubject2, new { htmlAttributes = new { type = "text", placeholder = " תחום יעוץ 2", id = "username", required = "" } })
                    <br />

                </div>
            </div>

                    <h4>בחירת תחומי ייעוץ</h4>
                    <input name="checkboxSelectCombo" id="checkboxSelectCombo">
                    <br />
                    <br />
                    <div class="row file-buttons-consultRegister">

                        <input type="file" name="file1" id="upload" class="custom-file-input">
                        <br />
                        <input type="file" name="file2" id="upload2" class="custom-file-input">
                    </div>

                    <div class="row">
                        <b>האם לקבל דיוור ממפ"י</b>
                        <input id="checkbox" name="check" type="checkbox" value="true" />
                    </div>
                        <div class="row right-buttons-consultRegister">
                            <input type="submit" class="" value="הרשם" }) />
                            <input type="button" value="חזור" onclick="location.href='@Url.Action("Login","account")'" }) />
                            <span style="color:red;">@TempData["Message"]</span>
                        </div>


        }

    </div>


</body>
</html>

